---
layout: page_software
title:
subtitle:
date:
updated:
navbar: Software
logo: 
code_url:
language:
license:
github_repo:
releases:
  -
institutes:
  -
topics:
  -
developers:
  -
contributors:
  -
permalink:
page_type: software_page
---
{% comment %}
================================
=== HOW TO USE THIS TEMPLATE ===
================================

Copy this file to `_software` and rename it to a very short version of your software's name.

Then fill in the YAML front matter above.
Here are some details on the available fields and their format:

  title            (required)
                   the name of the software

  date             (required)
                   the date this page was created in the format: YYYY-MM-DD;
                   this will get displayed at the very bottom of the generated website

  updated          (optional)
                   in case you or somebody else came back later and edited significant parts of the
                   page, put in the date (format: YYYY-MM-DD) of that change;
                   if present, this will get displayed at the very bottom of the generated website

  logo             (optional)
                   in case your software has a logo, you can put here the file name relative to the
                   assets path (_assets/images)

  code_url         (optional)
                   the full link to the main website of the software, where one can find more
                   information and the source code of the software

  language         (optional)
                   the programming language the software is written in

  license          (optional)
                   the software license used for the software

  github_repo      (optional)
                   in case the software's source code is hosted on GitHub, put in the USER/REPO
                   slug, e.g. JLESC/jlesc.github.io

  releases         (optional)
                   a YAML list of official releases/versions of the software;
                   each release is a YAML mapping with the following fields

                   version        (required)
                                  the version string of the release
                   date           (optional)
                                  the date of release in the form YYYY-MM-DD
                   link           (optional)
                                  URL of the release page with detailed information of the release,
                                  e.g. changelog
                   download       (optional)
                                  URL of the release archive, i.e. the packed source code of the release

  institutes       (optional)
                   a YAML list of institute IDs (see _data/institutes.yml), which are funding the
                   development of the software

  topics           (optional)
                   a YAML list of JLESC topic IDs (see _data/topics.yml) this software can be
                   categorized with

  developers       (optional)
                   a YAML list of JLESCees developing the software;
                   each entry is a mapping with the following fields

                   id             (required)
                                  developer's person ID as in _data/people.yml
                   lead_developer (optional)
                                  a value of 'true' indicates the person as a lead developer

  contributors     (optional)
                   a list of non-JLESC developers of the software;
                   each entry is a mapping with the following fields

                   name           (required)
                                  the name of developer
                   lead_developer (optional)
                                  a value of 'true' indicates the person as a lead developer

  permalink        (optional for main pages; require for sub-pages)
                   for the main page, this has to be left empty (or deleted); for software's
                   sub-pages this needs to match a certain pattern (see below)

  page_type        (required)
                   for the main page of a project (the default), this has field has to have the value
                   `project_page`; for subpages of a project this has to have the value
                   `project_subpage`

=======================================
== Creating Sub Pages for a Software ==
=======================================
Each software can have multiple sub-pages.
These sub-pages are accessible via the tabbed sub-navigation just below the software's title on the
software's page.

To create a sub-page, do the following:

1. Create a folder in `_software` with the exact same name as the Markdown file of the software
   (without the file extension).

2. Copy this template into the folder and give it a descriptive name and Markdown file extension
   (`.md`).

3. Copy all the YAML front matter from the software's main page to the sub-page.

3. Adjust YAML front matter fields for the sub-page:
   - `page_type` must be 'software_subpage'
   - `subtitle` must be given
   - `permalink` must be of the following form: /software/TITLE/SUBTITLE
     where `TITLE` and `SUBTITLE` are exactly as the file names, i.e. all lower case, dashes for
     whitespaces and no special characters

Example
-------
Given an event Markdown file `_software/linux-kernel.md`.
To create a sub-page for the Linux Kernel software, we create a folder
`_software/linux-kernel`, copy this template into that folder and rename it to `modules.md`.
Then, in `_software/linux-kernel/modules.md`, we copy the YAML front matter from
`_software/linux-kernel.md` to replace the YAML front matter of `modules.md` and change the
YAML fields `page_type` to 'software_subpage', `subtitle` to 'Modules' and `permalink` to
'/software/linux-kernel/modules/'.

Now, we have get a second tab on the 'Linux Kernel' software page with the title 'Modules'.

{% endcomment %}
